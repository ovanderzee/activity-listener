{"version":3,"file":"activityListener.js","sources":["../src/activityListener.js"],"sourcesContent":["const activityListener = (function () {\n    // internal state; isRunning - Boolean\n    let isRunning = true\n    // lookup table, callback is key, procdeure is value; callbackMap - WeakMap\n    const callbackMap = new Map()\n\n    /**\n     * Execute callback with checks\n     * @private\n     * @param {Function} timer - wrapped callback\n     */\n    const execute = function (callback, delay, event) {\n        if (!isRunning) {\n            return\n        }\n        const tryCatch = function () {\n            try {\n                callback(event)\n            } catch (error) {\n                console.error('activityListener caught faulty callback')\n            }\n        }\n        if (!delay) {\n            tryCatch()\n        } else {\n            setTimeout(tryCatch, delay)\n        }\n    }\n\n    /**\n     * Add or remove EventListeners\n     * @private\n     * @param {String} aim - 'add' | 'remove'\n     * @param {String} type - eventType\n     * @param {Function} callback - external function to call in case of event\n     */\n    const eventHandling = function (aim, type, callback) {\n        const handler = `on${type}`\n        const procedure = callbackMap.get(callback).procedure\n        const eventOptions = callbackMap.get(callback).options\n        if (handler in window) {\n            window[aim + 'EventListener'](type, procedure, eventOptions)\n        } else if (handler in document) {\n            document[aim + 'EventListener'](type, procedure, eventOptions)\n        } else if (aim === 'add') {\n            console.warn(`activityListener rejected ${type}-event`)\n        }\n    }\n\n    /**\n     * Attach callback to event.\n     * @param {String} type - event type to watch\n     * @param {Function} ahead - to execute first\n     * @param {Function} done - to execute after all\n     * @param {Number} doneDelay - milliseconds to allow regular event-handler to finish\n     */\n    const register = function (type, ahead, done, doneDelay = 50) {\n        const enroll = function (callback, options, delay) {\n            const procedure = function (event) {\n                execute(callback, delay, event)\n            }\n            callbackMap.set(callback, {\n                type: type,\n                procedure: procedure,\n                options: options,\n            })\n            eventHandling('add', type, callback)\n        }\n        if (ahead) {\n            enroll(ahead, { passive: true, capture: true }, 0)\n        }\n        if (done) {\n            enroll(done, { passive: true, capture: false }, doneDelay)\n        }\n    }\n\n    /**\n     * Detach event/callback pair.\n     * @param {String} type - event type to watch\n     * @param {Function} callback\n     */\n    const erase = function (type, callback) {\n        eventHandling('remove', type, callback)\n        callbackMap.delete(callback)\n    }\n\n    /**\n     * Erase all callbacks, without knowing them :-)\n     */\n    const destroy = function () {\n        for (let [key, value] of callbackMap) {\n            erase(value.type, key)\n        }\n    }\n\n    /**\n     * Expose callbacks\n     */\n    const resume = function () {\n        isRunning = true\n    }\n\n    /**\n     * Block callbacks\n     */\n    const pause = function () {\n        isRunning = false\n    }\n\n    return {\n        clear: destroy, // deprecated\n        destroy: destroy,\n        erase: erase,\n        pause: pause,\n        register: register,\n        resume: resume,\n    }\n})()\n\nexport { activityListener }\n"],"names":["isRunning","callbackMap","Map","eventHandling","aim","type","callback","handler","procedure","get","eventOptions","options","window","document","console","warn","erase","delete","destroy","key","value","clear","pause","register","ahead","done","doneDelay","enroll","delay","set","event","tryCatch","error","setTimeout","execute","passive","capture","resume"],"mappings":"wPAAyB,WAErB,IAAIA,GAAY,EAEhB,MAAMC,EAAc,IAAIC,IAgClBC,EAAgB,SAAUC,EAAKC,EAAMC,GACvC,MAAMC,EAAU,KAAKF,IACfG,EAAYP,EAAYQ,IAAIH,GAAUE,UACtCE,EAAeT,EAAYQ,IAAIH,GAAUK,QAC3CJ,KAAWK,OACXA,OAAOR,EAAM,iBAAiBC,EAAMG,EAAWE,GACxCH,KAAWM,SAClBA,SAAST,EAAM,iBAAiBC,EAAMG,EAAWE,GAClC,QAARN,GACPU,QAAQC,KAAK,6BAA6BV,YAoC5CW,EAAQ,SAAUX,EAAMC,GAC1BH,EAAc,SAAUE,EAAMC,GAC9BL,EAAYgB,OAAOX,IAMjBY,EAAU,WACZ,IAAK,IAAKC,EAAKC,KAAUnB,EACrBe,EAAMI,EAAMf,KAAMc,IAkB1B,MAAO,CACHE,MAAOH,EACPA,QAASA,EACTF,MAAOA,EACPM,MARU,WACVtB,GAAY,GAQZuB,SA1Da,SAAUlB,EAAMmB,EAAOC,EAAMC,EAAY,IACtD,MAAMC,EAAS,SAAUrB,EAAUK,EAASiB,GAIxC3B,EAAY4B,IAAIvB,EAAU,CACtBD,KAAMA,EACNG,UALc,SAAUsB,IA/CpB,SAAUxB,EAAUsB,EAAOE,GACvC,IAAK9B,EACD,OAEJ,MAAM+B,EAAW,WACb,IACIzB,EAASwB,GACX,MAAOE,GACLlB,QAAQkB,MAAM,6CAGjBJ,EAGDK,WAAWF,EAAUH,GAFrBG,IAoCIG,CAAQ5B,EAAUsB,EAAOE,IAKzBnB,QAASA,IAEbR,EAAc,MAAOE,EAAMC,IAE3BkB,GACAG,EAAOH,EAAO,CAAEW,SAAS,EAAMC,SAAS,GAAQ,GAEhDX,GACAE,EAAOF,EAAM,CAAEU,SAAS,EAAMC,SAAS,GAASV,IA2CpDW,OAjBW,WACXrC,GAAY,IAnGK"}