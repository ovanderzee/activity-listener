const e=function(){let e=!0;const t={},n=function(e,n,o){const c=`on${n}`,i=t[n].get(o).procedure,r=t[n].get(o).options;c in window?window[e+"EventListener"](n,i,r):c in document?document[e+"EventListener"](n,i,r):"add"===e&&console.warn(`activityListener rejected ${n}-event`)},o=function(e,o){n("remove",e,o),t[e].delete(o),t[e].size||delete t[e]},c=function(){Object.keys(t).forEach((e=>{for(let n of t[e].keys())o(e,n)}))};return{debug:()=>console.log("registry",t),clear:c,destroy:c,erase:o,pause:function(){e=!1},register:function(o,c,i,r=50){const s=function(c,i,r){t[o]||(t[o]=new Map),t[o].set(c,{procedure:function(t){!function(t,n,o){if(!e)return;const c=function(){try{t(o)}catch(e){console.error("activityListener caught faulty callback")}};n?setTimeout(c,n):c()}(c,r,t)},options:i}),n("add",o,c)};c&&s(c,{passive:!0,capture:!0},0),i&&s(i,{passive:!0,capture:!1},r)},resume:function(){e=!0}}}();export default e;
//# sourceMappingURL=activityListener.js.map
